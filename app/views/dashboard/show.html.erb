
<% @user.tracked_subjects.each do |subject| %>
  <ul>
    <li class="mouse"><%= link_to "Mouse ##{subject.mouse.original_id}", mouse_path(subject.mouse.original_id) %></li>
    <%= link_to "Untrack", tracked_subject_path(original_id: subject.mouse.original_id), method: :delete %></li>
  </ul>
<% end %>
</br>

<canvas id="myChart" width="50" height="50"></canvas>
<button class="test" type="button">Click Me!</button>

<script>

const getMiceData =  async () => {
  const initialFetch = await fetch('api/v1/all')
  const results = await initialFetch.json()
  return getAllMiceIds(results)
}

$(document).ready(function() {

  getMiceData()
  .then(ids => {
    testFunction(ids)
  })
})

function getMouseId(mouse) {
  return mouse.id
}

function getAllMiceIds(mice) {
  return mice.map(getMouseId)
}

function miceData() {
  return fetch('api/v1/all')
  .then(function(response)  {
    return response.json()
  })
  .then(function(mice)  {
    return getAllMiceIds(mice)
  })
}


var ctx = document.getElementById("myChart").getContext('2d');
function testFunction(arrayOfIds) {
  return new Chart(ctx, {
      type: 'bar',
      data: {
          labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
          datasets: [{
              label: '# of Votes',
              data: arrayOfIds,
              backgroundColor: [
                  'rgba(255, 99, 132, 0.2)',
                  'rgba(54, 162, 235, 0.2)',
                  'rgba(255, 206, 86, 0.2)',
                  'rgba(75, 192, 192, 0.2)',
                  'rgba(153, 102, 255, 0.2)',
                  'rgba(255, 159, 64, 0.2)'
              ],
              borderColor: [
                  'rgba(255,99,132,1)',
                  'rgba(54, 162, 235, 1)',
                  'rgba(255, 206, 86, 1)',
                  'rgba(75, 192, 192, 1)',
                  'rgba(153, 102, 255, 1)',
                  'rgba(255, 159, 64, 1)'
              ],
              borderWidth: 1
          }]
      },
      options: {
          scales: {
              yAxes: [{
                  ticks: {
                      beginAtZero:true
                  }
              }]
          }
      }
  });
}

</script>
